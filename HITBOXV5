-- Hitbox Expander com Slider para Mobile

local player = game.Players.LocalPlayer
local sizeDefault = 2 -- Tamanho padrão
local transparency = 1 -- Invisível

-- Criar a interface
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
local frame = Instance.new("Frame", screenGui)
frame.Position = UDim2.new(0.05, 0, 0.8, 0)
frame.Size = UDim2.new(0.4, 0, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BackgroundTransparency = 0.4

local slider = Instance.new("TextButton", frame)
slider.Size = UDim2.new(0.1, 0, 1, 0)
slider.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
slider.Text = ""

-- Função para atualizar o tamanho
local function updateSize(newSize)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local part = player.Character.HumanoidRootPart
        part.Size = Vector3.new(newSize, newSize, newSize)
        part.Transparency = transparency
        part.CanCollide = false
    end
end

-- Evento de arrastar o slider
local dragging = false

slider.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
    end
end)

slider.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and input.Position then
        local relativeX = math.clamp((input.Position.X - frame.AbsolutePosition.X) / frame.AbsoluteSize.X, 0, 1)
        slider.Position = UDim2.new(relativeX, 0, 0, 0)
        local newSize = sizeDefault + (relativeX * 20) -- De 2 até 22 de tamanho
        updateSize(newSize)
    end
end)

print("Hitbox Expander com Slider carregado!")
